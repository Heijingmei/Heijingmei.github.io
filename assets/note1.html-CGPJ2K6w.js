import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,e}from"./app-DsLwCP3H.js";const t={},p=e(`<div class="language-fortran line-numbers-mode" data-ext="fortran" data-title="fortran"><pre class="language-fortran"><code><span class="token keyword">program</span> pointerExample
<span class="token keyword">implicit none</span>

   <span class="token keyword">integer</span><span class="token punctuation">,</span> <span class="token keyword">pointer</span> <span class="token operator">::</span> p1
   <span class="token keyword">integer</span><span class="token punctuation">,</span> <span class="token keyword">target</span> <span class="token operator">::</span> t1 
   
   p1<span class="token operator">=&gt;</span>t1
   p1 <span class="token operator">=</span> <span class="token number">1</span>
   
   <span class="token keyword">Print</span> <span class="token operator">*</span><span class="token punctuation">,</span> p1
   <span class="token keyword">Print</span> <span class="token operator">*</span><span class="token punctuation">,</span> t1
   
   p1 <span class="token operator">=</span> p1 <span class="token operator">+</span> <span class="token number">4</span>
   
   <span class="token keyword">Print</span> <span class="token operator">*</span><span class="token punctuation">,</span> p1
   <span class="token keyword">Print</span> <span class="token operator">*</span><span class="token punctuation">,</span> t1
   
   t1 <span class="token operator">=</span> <span class="token number">8</span>
   
   <span class="token keyword">Print</span> <span class="token operator">*</span><span class="token punctuation">,</span> p1
   <span class="token keyword">Print</span> <span class="token operator">*</span><span class="token punctuation">,</span> t1
   
<span class="token keyword">end program</span> pointerExample
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),o=[p];function r(i,l){return a(),s("div",null,o)}const k=n(t,[["render",r],["__file","note1.html.vue"]]),m=JSON.parse('{"path":"/Lilya/program/Fortran/note1.html","title":"","lang":"en-US","frontmatter":{"head":[["meta",{"property":"og:url","content":"https://github.com/Heijingmei/Heijingmei.github.io/Lilya/program/Fortran/note1.html"}],["meta",{"property":"og:site_name","content":"BH_English Version"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-22T23:32:31.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-22T23:32:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-22T23:32:31.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1713828751000,"updatedTime":1713828751000,"contributors":[{"name":"Heijingmei","email":"bh.heijingmei@gmail.com","commits":1}]},"readingTime":{"minutes":0.12,"words":35},"filePathRelative":"Lilya/program/Fortran/note1.md","localizedDate":"April 22, 2024","excerpt":"<div class=\\"language-fortran\\" data-ext=\\"fortran\\" data-title=\\"fortran\\"><pre class=\\"language-fortran\\"><code><span class=\\"token keyword\\">program</span> pointerExample\\n<span class=\\"token keyword\\">implicit none</span>\\n\\n   <span class=\\"token keyword\\">integer</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">pointer</span> <span class=\\"token operator\\">::</span> p1\\n   <span class=\\"token keyword\\">integer</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">target</span> <span class=\\"token operator\\">::</span> t1 \\n   \\n   p1<span class=\\"token operator\\">=&gt;</span>t1\\n   p1 <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span>\\n   \\n   <span class=\\"token keyword\\">Print</span> <span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">,</span> p1\\n   <span class=\\"token keyword\\">Print</span> <span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">,</span> t1\\n   \\n   p1 <span class=\\"token operator\\">=</span> p1 <span class=\\"token operator\\">+</span> <span class=\\"token number\\">4</span>\\n   \\n   <span class=\\"token keyword\\">Print</span> <span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">,</span> p1\\n   <span class=\\"token keyword\\">Print</span> <span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">,</span> t1\\n   \\n   t1 <span class=\\"token operator\\">=</span> <span class=\\"token number\\">8</span>\\n   \\n   <span class=\\"token keyword\\">Print</span> <span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">,</span> p1\\n   <span class=\\"token keyword\\">Print</span> <span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">,</span> t1\\n   \\n<span class=\\"token keyword\\">end program</span> pointerExample\\n</code></pre></div>"}');export{k as comp,m as data};
