import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as t,e as a}from"./app-CMIe-phv.js";const s={},o=a(`<p>A conditional statement is used to perform different computations based on the result of a condition. The key leads to different logic paths based on the condition (<code>true</code>/<code>false</code>).</p><h2 id="if-conditional-statement" tabindex="-1"><a class="header-anchor" href="#if-conditional-statement"><span>if Conditional Statement</span></a></h2><h3 id="if-statement" tabindex="-1"><a class="header-anchor" href="#if-statement"><span>if Statement</span></a></h3><p>The <code>if</code> statement, referred to as a conditional control statement, executes a statement when an expression is <code>true</code>. It&#39;s known as a decision-making structure. Its form is:</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>expression<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// code will be executed if the condition is true</span>
    statements
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>expression</code> can be <code>true</code> or <code>false</code>. The statement to be executed can either be a single statement terminated by a semicolon or a code block enclosed in curly braces <code>{}</code>.</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token keyword">int</span> score <span class="token operator">=</span> <span class="token number">89</span><span class="token punctuation">;</span>
    
    <span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">&gt;</span> <span class="token number">75</span><span class="token punctuation">)</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;You passed.\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the above statement, we check if the score is greater than 75. If true, it prints(<code>printf</code>) a message.</p><h3 id="if-else-statement" tabindex="-1"><a class="header-anchor" href="#if-else-statement"><span>if-else Statement</span></a></h3><p>The <code>if-else</code> statement is utilized when you want to execute one block of code when a condition is <code>true</code> and another block when it&#39;s <code>false</code>.</p><p><strong>Syntax</strong>:</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// code to be executed if the condition is true</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// code to be executed if the condition is false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For example:</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token keyword">int</span> score <span class="token operator">=</span> <span class="token number">89</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">&gt;=</span> <span class="token number">90</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Top 10%%.\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Less than 90.\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If the score is 90 or higher, it prints &quot;Top 10%.&quot; Otherwise, it prints &quot;Less than 90.&quot;</p>`,15),i=[o];function c(p,l){return n(),t("div",null,i)}const u=e(s,[["render",c],["__file","note1.html.vue"]]),m=JSON.parse(`{"path":"/de/Lilya/program/C/C-02-Condition-and-Loop/note1.html","title":"2-1 if Conditional Statement","lang":"ger-De","frontmatter":{"title":"2-1 if Conditional Statement","author":"Lilya 黑静美","isOriginal":true,"category":["Programmierung"],"tag":["C","C#"],"icon":"c","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":3,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"description":"A conditional statement is used to perform different computations based on the result of a condition. The key leads to different logic paths based on the condition (true/false)....","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://github.com/Heijingmei/Heijingmei.github.io/Lilya/program/C/C-02-Condition-and-Loop/note1.html"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://github.com/Heijingmei/Heijingmei.github.io/zh/Lilya/program/C/C-02-Condition-and-Loop/note1.html"}],["meta",{"property":"og:url","content":"https://github.com/Heijingmei/Heijingmei.github.io/de/Lilya/program/C/C-02-Condition-and-Loop/note1.html"}],["meta",{"property":"og:site_name","content":"BH_Deutsch-Auflage"}],["meta",{"property":"og:title","content":"2-1 if Conditional Statement"}],["meta",{"property":"og:description","content":"A conditional statement is used to perform different computations based on the result of a condition. The key leads to different logic paths based on the condition (true/false)...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ger-De"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-13T17:55:15.000Z"}],["meta",{"property":"article:author","content":"Lilya 黑静美"}],["meta",{"property":"article:tag","content":"C"}],["meta",{"property":"article:tag","content":"C#"}],["meta",{"property":"article:modified_time","content":"2024-04-13T17:55:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2-1 if Conditional Statement\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-13T17:55:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lilya 黑静美\\"}]}"]]},"headers":[{"level":2,"title":"if Conditional Statement","slug":"if-conditional-statement","link":"#if-conditional-statement","children":[{"level":3,"title":"if Statement","slug":"if-statement","link":"#if-statement","children":[]},{"level":3,"title":"if-else Statement","slug":"if-else-statement","link":"#if-else-statement","children":[]}]}],"git":{"createdTime":1713030915000,"updatedTime":1713030915000,"contributors":[{"name":"Heijingmei","email":"bh.heijingmei@gmail.com","commits":1}]},"readingTime":{"minutes":0.96,"words":287},"filePathRelative":"de/Lilya/program/C/C-02-Condition-and-Loop/note1.md","localizedDate":"April 13, 2024","excerpt":"<p>A conditional statement is used to perform different computations based on the result of a condition. The key leads to different logic paths based on the condition (<code>true</code>/<code>false</code>).</p>\\n<h2>if Conditional Statement</h2>\\n<h3>if Statement</h3>\\n<p>The <code>if</code> statement, referred to as a conditional control statement, executes a statement when an expression is <code>true</code>. It's known as a decision-making structure. Its form is:</p>","autoDesc":true}`);export{u as comp,m as data};
