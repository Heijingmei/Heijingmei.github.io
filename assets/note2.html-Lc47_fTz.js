import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as a,e as n}from"./app-CFMUrC80.js";const s={},i=n(`<h2 id="_1-how-to-name" tabindex="-1"><a class="header-anchor" href="#_1-how-to-name"><span>1. How to name</span></a></h2><p>In Rust, legal identifier names (for variables, functions, traits, etc.) must consist of letters, digits, and underscores, and cannot start with a digit. This is similar to many other languages. Rust will also allow other Unicode characters as identifiers in the future.</p><p>f.e.</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>let variable: i32 = 0;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-rust line-numbers-mode" data-ext="rs" data-title="rs"><pre class="language-rust"><code><span class="token keyword">let</span> variable<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;variable  = {}&quot;</span><span class="token punctuation">,</span> variable<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error[E0381]: use of possibly unintialized &#39;variable&#39; </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[i];function r(l,c){return e(),a("div",null,o)}const u=t(s,[["render",r],["__file","note2.html.vue"]]),m=JSON.parse('{"path":"/Lilya/program/rust/note2.html","title":"02-data types and another syntaxes","lang":"en-US","frontmatter":{"title":"02-data types and another syntaxes","author":"Lilya 黑静美","category":["program"],"tag":["rust","syntax"],"isOriginal":true,"icon":"/ico/Rust.ico","sticky":false,"star":true,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":3,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"description":"1. How to name In Rust, legal identifier names (for variables, functions, traits, etc.) must consist of letters, digits, and underscores, and cannot start with a digit. This is ...","head":[["meta",{"property":"og:url","content":"https://github.com/Heijingmei/Heijingmei.github.io/Lilya/program/rust/note2.html"}],["meta",{"property":"og:site_name","content":"BH_English Version"}],["meta",{"property":"og:title","content":"02-data types and another syntaxes"}],["meta",{"property":"og:description","content":"1. How to name In Rust, legal identifier names (for variables, functions, traits, etc.) must consist of letters, digits, and underscores, and cannot start with a digit. This is ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-04T08:24:09.000Z"}],["meta",{"property":"article:author","content":"Lilya 黑静美"}],["meta",{"property":"article:tag","content":"rust"}],["meta",{"property":"article:tag","content":"syntax"}],["meta",{"property":"article:modified_time","content":"2024-06-04T08:24:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"02-data types and another syntaxes\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-04T08:24:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lilya 黑静美\\"}]}"]]},"headers":[{"level":2,"title":"1. How to name","slug":"_1-how-to-name","link":"#_1-how-to-name","children":[]}],"git":{"createdTime":1717489449000,"updatedTime":1717489449000,"contributors":[{"name":"Heijingmei","email":"bh.heijingmei@gmail.com","commits":1}]},"readingTime":{"minutes":0.37,"words":111},"filePathRelative":"Lilya/program/rust/note2.md","localizedDate":"June 4, 2024","excerpt":"<h2>1. How to name</h2>\\n<p>In Rust, legal identifier names (for variables, functions, traits, etc.) must consist of letters, digits, and underscores, and cannot start with a digit. This is similar to many other languages. Rust will also allow other Unicode characters as identifiers in the future.</p>","autoDesc":true}');export{u as comp,m as data};
