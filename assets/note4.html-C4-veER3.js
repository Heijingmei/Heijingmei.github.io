import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as i,a as n,d as t,e as p,b as s}from"./app-BKwTevcG.js";const l="/assets/image-20240521135355591-DKPM7ELU.png",u="/assets/image-20240526162811865-CXKrnD9k.png",d="/assets/image-20240526162852774-CpcABjO7.png",r="/assets/image-20240526164104901-FwfMqExR.png",k="/assets/image-20240526165010573-C2rYIPKb.png",m="/assets/image-20240526170705965-CUHcXa2S.png",v="/assets/image-20240526165555578-DtY240yY.png",b={},g=p(`<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>student <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Lilei&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;class01&#39;</span><span class="token punctuation">,</span><span class="token number">201901</span><span class="token punctuation">]</span>
student <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;W&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;class02&#39;</span><span class="token punctuation">,</span><span class="token number">201902</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-列表的特征" tabindex="-1"><a class="header-anchor" href="#_1-列表的特征"><span>1. 列表的特征</span></a></h2><ul><li><p>利用中括号表示列表</p></li><li><p>列表内的元素用逗号隔开</p></li><li><p>（半角）</p><ul><li><p>列表的可变性：可以修改列表里的内容</p></li><li><p>字符串强制转化为列表</p><p>（每个字母/数字/独立的汉字/空白占位符均被隔开）</p></li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>str_to_list <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">&quot;じ Übung 好&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>str_to_list<span class="token punctuation">)</span>

<span class="token comment">#---output---</span>
<span class="token comment">#[&#39;じ&#39;, &#39; &#39;, &#39;Ü&#39;, &#39;b&#39;, &#39;u&#39;, &#39;n&#39;, &#39;g&#39;, &#39; &#39;, &#39;好&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-下标相关" tabindex="-1"><a class="header-anchor" href="#_2-下标相关"><span>2. 下标相关</span></a></h2><h3 id="获取列表的某一个元素" tabindex="-1"><a class="header-anchor" href="#获取列表的某一个元素"><span>获取列表的某一个元素</span></a></h3><p>编程语言中通常<code>第一个位置的编号是0</code></p><figure><img src="`+l+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>例：提取<code>99</code>和<code>80</code></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>grade <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>grade<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">#---output---</span>
<span class="token comment"># 99 80</span>
<span class="token comment"># [99, 80]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="连续读取" tabindex="-1"><a class="header-anchor" href="#连续读取"><span>连续读取</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># [2, 3, 4, 5]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="倒置列表" tabindex="-1"><a class="header-anchor" href="#倒置列表"><span>倒置列表</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>grade_r_side_l <span class="token operator">=</span> grade<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade_r_side_l <span class="token punctuation">)</span>

<span class="token comment">#---output---</span>
<span class="token comment"># 99 80</span>
<span class="token comment"># [80, 95, 99, 98]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3" tabindex="-1"><a class="header-anchor" href="#_3"><span>3.</span></a></h2><h3 id="_1-更改列表的元素" tabindex="-1"><a class="header-anchor" href="#_1-更改列表的元素"><span>1. 更改列表的元素</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> name <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">&#39;python&#39;</span><span class="token punctuation">)</span>

In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> name<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
Out<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;t&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;h&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;n&#39;</span><span class="token punctuation">]</span>

In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> name<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span>

In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> name
Out<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-列表内插入内容" tabindex="-1"><a class="header-anchor" href="#_2-列表内插入内容"><span>2. 列表内插入内容</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>name <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#指向1和5之间</span>
<span class="token comment"># []</span>
name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span> 
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
<span class="token comment"># [1, 2, 3, 4, 5]</span>
name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
<span class="token comment"># [1, 5]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>练习</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>

<span class="token comment">#---output---</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
numbers<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取用户输入:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
val <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;The values you want to add in&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
position <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;The position of the value&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># equal</span>
numbers<span class="token punctuation">[</span>position<span class="token punctuation">:</span>position<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>val<span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-列表的加法1" tabindex="-1"><a class="header-anchor" href="#_3-列表的加法1"><span>3. 列表的加法1</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
<span class="token comment"># equal</span>
result <span class="token operator">=</span> numbers<span class="token punctuation">[</span><span class="token punctuation">:</span>position<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span>val<span class="token punctuation">]</span> <span class="token operator">+</span> numbers<span class="token punctuation">[</span>position<span class="token punctuation">:</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-在列表的特定位置插入元素「-insert-index-element-」" tabindex="-1"><a class="header-anchor" href="#_4-在列表的特定位置插入元素「-insert-index-element-」"><span>4. 在列表的特定位置插入元素「<code>.insert(index,element)</code>」</span></a></h3><p><code>.int(index, element)</code>是一个列表的基本方法，用于在列表特定位置插入元素。</p><p>它的基本语法是：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token builtin">list</span><span class="token punctuation">.</span>insert<span class="token punctuation">(</span>index<span class="token punctuation">,</span>element<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>index</code>： 指定要插入的元素的位置，索引从0开始。如果指定的索引超出了列表的当前长度， <strong>不会报错</strong>，元素会被插入列表的末尾</p><p><code>element</code> 想要插入的元素</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># equal</span>
result2 <span class="token operator">=</span> numbers<span class="token punctuation">.</span>insert<span class="token punctuation">(</span>position<span class="token punctuation">,</span> val<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-修改列表中的元素2" tabindex="-1"><a class="header-anchor" href="#_5-修改列表中的元素2"><span>5.修改列表中的元素2</span></a></h3><p><code>list</code>[<code>index</code>] = <code>new</code></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>name <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Lilei&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;W&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;before: &quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>

name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Han Meimei&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;after: &quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>before<span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token string">&#39;Lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;W&#39;</span><span class="token punctuation">]</span>
after<span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token string">&#39;Han Meimei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;W&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>修改多个数据</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;before: &#39;</span><span class="token punctuation">,</span> numbers<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">)</span>
numbers<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;three&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;four&#39;</span><span class="token punctuation">]</span> <span class="token comment">#修改相同数量</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;afters: &#39;</span><span class="token punctuation">,</span> numbers<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">)</span>
numbers<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">]</span>  <span class="token comment">#修改不同数量</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;afters2: &#39;</span><span class="token punctuation">,</span> numbers<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">)</span>             <span class="token comment">#可变性：地址相同的同一数据可以进行修改</span>
numbers<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;three&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;four&#39;</span><span class="token punctuation">]</span>  <span class="token comment">#修改不同数量</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;afters2: &#39;</span><span class="token punctuation">,</span> numbers<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">)</span> 

numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>   <span class="token comment">#本质算是新的数据</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;before: &#39;</span><span class="token punctuation">,</span> numbers<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">)</span>
numbers<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">]</span>  
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;afters2: &#39;</span><span class="token punctuation">,</span> numbers<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;before: &#39;</span><span class="token punctuation">,</span> numbers<span class="token punctuation">)</span>

numbers<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token string">&#39;have a nice day&#39;</span> <span class="token comment">#字符串作为元素填入，第1个元素，当替换掉单一元素时，括号可省略，但是存在一些问题（如下）</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;1:&#39;</span><span class="token punctuation">,</span>numbers<span class="token punctuation">)</span>

numbers<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;have&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a nice day&#39;</span><span class="token punctuation">]</span> <span class="token comment">#字符串作为元素填入</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;2:&#39;</span><span class="token punctuation">,</span>numbers<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>列表要替换的元素数量与要填入的元素数量不一致（存在的问题）</p><ul><li>字符串将拆分成列表填入</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>   <span class="token comment">#本质算是新的数据</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;before: &#39;</span><span class="token punctuation">,</span> numbers<span class="token punctuation">)</span>

numbers<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token string">&#39;have a nice day&#39;</span> <span class="token comment">#字符串作为元素填入，第1个元素</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>

numbers<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;have&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a nice day&#39;</span><span class="token punctuation">]</span> <span class="token comment">#字符串作为元素填入</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>

numbers<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token string">&#39;have a nice day&#39;</span> <span class="token comment">#字符串将拆分成列表填入，并替换掉1-4的元素</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>数字型(以及布尔型）报错</li><li>集合将拆分成列表填入</li><li>集合将拆分成列表填入，并且乱序</li><li>字典串将拆分成列表填入，并丢去目录</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token number">123</span>  <span class="token comment">#数字型作为元素填入</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;7:&#39;</span><span class="token punctuation">,</span>numbers<span class="token punctuation">)</span>

<span class="token comment">###todo #can only assign an iterable</span>

<span class="token comment">#numbers[0:2]= 123   #报错,数字型填入的数量不能和原数量不一致</span>
<span class="token comment">#print(&#39;8:&#39;,numbers)</span>

<span class="token comment">#numbers[1:1]= 123   #报错</span>
<span class="token comment">#print(&#39;9:&#39;,numbers)</span>


numbers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span>  <span class="token comment">#集合作为元素填入</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;10:&#39;</span><span class="token punctuation">,</span> numbers<span class="token punctuation">)</span>

numbers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span>  <span class="token comment">#集合作为元素填入，将拆分成列表填入</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;11:&#39;</span><span class="token punctuation">,</span> numbers<span class="token punctuation">)</span>

numbers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">#元组作为元素填入，将拆分成列表填入</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;12:&#39;</span><span class="token punctuation">,</span> numbers<span class="token punctuation">)</span>

numbers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">}</span> <span class="token comment">#字典作为元素填入，将拆分成列表填入，并舍去目录</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;13:&#39;</span><span class="token punctuation">,</span> numbers<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-末尾添加元素" tabindex="-1"><a class="header-anchor" href="#_6-末尾添加元素"><span>6. 末尾添加元素</span></a></h3><h4 id="a-使用-append-在末尾添加元素" tabindex="-1"><a class="header-anchor" href="#a-使用-append-在末尾添加元素"><span>a. 使用<code>.append()</code>在末尾添加元素</span></a></h4><h5 id="b-extend" tabindex="-1"><a class="header-anchor" href="#b-extend"><span>b. <code>.extend()</code></span></a></h5><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;钥匙&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;毒药&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;before:&#39;</span><span class="token punctuation">,</span>lst<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span><span class="token punctuation">)</span>
lst<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;解药&#39;</span><span class="token punctuation">)</span> <span class="token comment">#append每次只能添加一个元素</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;after:&#39;</span><span class="token punctuation">,</span>lst<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span><span class="token punctuation">)</span>

lst<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#extend可以添加多个元素</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;extend:&#39;</span><span class="token punctuation">,</span>lst<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-删除元素" tabindex="-1"><a class="header-anchor" href="#_7-删除元素"><span>7. 删除元素</span></a></h3><h4 id="c-del删除元素" tabindex="-1"><a class="header-anchor" href="#c-del删除元素"><span>c. <code>del</code>删除元素</span></a></h4><p>del 需要指定列表中要删除的单个元素或多个元素 如果不指定元素则删除整个变量</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>student_list <span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;Lilei&#39;</span><span class="token punctuation">,</span><span class="token string">&quot;W&quot;</span><span class="token punctuation">,</span><span class="token string">&#39;Hanmeimei&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">del</span> student_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>student_list<span class="token punctuation">)</span>
<span class="token keyword">del</span> student_list
<span class="token comment"># print(student_list) #报错</span>
<span class="token comment"># NameError: name &#39;student_list&#39; is not defined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="d-pop-默认删除最后一个元素" tabindex="-1"><a class="header-anchor" href="#d-pop-默认删除最后一个元素"><span>d. <code>.pop()</code>默认删除最后一个元素</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>student_list <span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;Lilei&#39;</span><span class="token punctuation">,</span><span class="token string">&quot;W&quot;</span><span class="token punctuation">,</span><span class="token string">&#39;Hanmeimei&#39;</span><span class="token punctuation">]</span>
student_list<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#默认删除最后一个</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>student_list<span class="token punctuation">)</span>
student_list<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">#删除指定元素（通过下标指定）</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>student_list<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="e-remove-指定删除列表中的元素" tabindex="-1"><a class="header-anchor" href="#e-remove-指定删除列表中的元素"><span>e. <code>.remove()</code>指定删除列表中的元素</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>student_list<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&#39;W&#39;</span><span class="token punctuation">)</span> <span class="token comment">#删除指定元素（通过内容指定）</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>student_list<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_8-使用-加号相加多个列表-加法2" tabindex="-1"><a class="header-anchor" href="#_8-使用-加号相加多个列表-加法2"><span>8. 使用<code>+</code>加号相加多个列表_加法2</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers1<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
numbers2<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers1<span class="token operator">+</span>numbers2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-len长度" tabindex="-1"><a class="header-anchor" href="#_9-len长度"><span>9. <code>len</code>长度</span></a></h3><p>使用<code>len()</code>获取长度</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>student_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Lilei&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;W&#39;</span><span class="token punctuation">,</span><span class="token string">&quot;Han Meimei&quot;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>student_list<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>student_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#---output---</span>
<span class="token number">3</span>
<span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h3><h3 id="_10-in" tabindex="-1"><a class="header-anchor" href="#_10-in"><span>10. <code>in</code></span></a></h3><p><code>value</code> in <code>Sequence</code></p><h4 id="判断某个值是否在列表中" tabindex="-1"><a class="header-anchor" href="#判断某个值是否在列表中"><span>判断某个值是否在列表中</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>inventory <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;钥匙&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;毒药&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;解药&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;毒药&#39;</span> <span class="token keyword">in</span> inventory<span class="token punctuation">)</span> <span class="token comment">#返回布尔值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;迷药&#39;</span> <span class="token keyword">in</span> inventory<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="使用if条件" tabindex="-1"><a class="header-anchor" href="#使用if条件"><span>使用if条件</span></a></h6><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>inventory <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;钥匙&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;毒药&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;解药&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">if</span> <span class="token string">&#39;解药&#39;</span> <span class="token keyword">in</span> inventory<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;yes&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;no&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>True
False
yes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="判断某个值是否在字典中" tabindex="-1"><a class="header-anchor" href="#判断某个值是否在字典中"><span>判断某个值是否在字典中</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dct <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;钥匙&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;毒药&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;z&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;解药&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;x&#39;</span><span class="token keyword">in</span> dct<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;钥匙&#39;</span> <span class="token keyword">in</span> dct<span class="token punctuation">)</span>  <span class="token comment"># 在字典中检索的是&#39;key&#39;的内容</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>想检索字典中的值应该加入<code>.values()</code></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dct <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;钥匙&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;毒药&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;z&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;解药&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;钥匙&#39;</span> <span class="token keyword">in</span> dct<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>True
False
True
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-获取列表中某个元素重复的次数-count" tabindex="-1"><a class="header-anchor" href="#_11-获取列表中某个元素重复的次数-count"><span>11. 获取列表中某个元素重复的次数 <code>.count()</code></span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_12-index" tabindex="-1"><a class="header-anchor" href="#_12-index"><span>12. <code>.index()</code></span></a></h4><p>寻找目标列表中的元素第一次出现的下标。不存在则会报错</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#output: 1</span>

<span class="token comment"># print(numbers.index(&#39;i&#39;))</span>
<span class="token comment"># print(numbers.index(&#39;1&#39;))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># print(numbers.index(&#39;i&#39;))</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&#39;i&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ValueError<span class="token punctuation">:</span> <span class="token string">&#39;i&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token builtin">list</span>

<span class="token comment"># print(numbers.index(&#39;1&#39;))</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ValueError<span class="token punctuation">:</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token builtin">list</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_13-翻转列表-reverse" tabindex="-1"><a class="header-anchor" href="#_13-翻转列表-reverse"><span>13. 翻转列表<code>.reverse()</code></span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;id:&#39;</span><span class="token punctuation">,</span><span class="token builtin">id</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">)</span>
numbers<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;id:&#39;</span><span class="token punctuation">,</span><span class="token builtin">id</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_14-列表排序-sort" tabindex="-1"><a class="header-anchor" href="#_14-列表排序-sort"><span>14. 列表排序<code>.sort()</code></span></a></h3><p>使列表元素从大到小排列，直到修改到列表本身。如果指定<code>reverse = True</code>， 则降序排列。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">)</span>
numbers<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">)</span>
numbers<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>[2, 1, 4, 3, 7, 6, 5, 0, 9, 8]
id: 4298523392
[8, 9, 0, 5, 6, 7, 3, 4, 1, 2]
id: 4298523392
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
id: 4298523392
[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_15-列表排序2-sorted" tabindex="-1"><a class="header-anchor" href="#_15-列表排序2-sorted"><span>15. 列表排序2<code>.sorted()</code></span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers2 <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>numbers<span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment">#reverse=False 可以不写，为默认值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers2<span class="token punctuation">)</span>
numbers2 <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">两种排序的区别及注意事项</p></div><h2 id="练习" tabindex="-1"><a class="header-anchor" href="#练习"><span>练习</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token string">&#39;132569874&#39;</span>

numbers <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">#错误</span>
<span class="token comment"># output: None</span>

numbers2 <span class="token operator">=</span> numbers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>
numbers2<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
numbers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> numbers2
<span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>[&#39;1&#39;, &#39;3&#39;, &#39;2&#39;, &#39;5&#39;, &#39;6&#39;, &#39;9&#39;, &#39;8&#39;, &#39;7&#39;, &#39;4&#39;]
None
[&#39;8&#39;, &#39;3&#39;, &#39;6&#39;, &#39;5&#39;, &#39;4&#39;, &#39;9&#39;, &#39;2&#39;, &#39;7&#39;, &#39;1&#39;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_16-深浅拷贝" tabindex="-1"><a class="header-anchor" href="#_16-深浅拷贝"><span>16. 深浅拷贝</span></a></h3><h4 id="a-直接赋值" tabindex="-1"><a class="header-anchor" href="#a-直接赋值"><span>a. 直接赋值</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;毒药&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;解药&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;感冒药&#39;</span><span class="token punctuation">]</span>
y <span class="token operator">=</span> x <span class="token comment"># y直接读取了同一个变量</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Original: \\n\\t x:</span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token punctuation">}</span></span><span class="token string"> \\n\\t y:</span><span class="token interpolation"><span class="token punctuation">{</span>y<span class="token punctuation">}</span></span><span class="token string"> \\n\\t id_x: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">\\t id_y: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span> <span class="token comment"># id_x与 id_y相同</span>
y<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;消炎药&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;After: \\n\\t x:</span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token punctuation">}</span></span><span class="token string"> \\n\\t y:</span><span class="token interpolation"><span class="token punctuation">{</span>y<span class="token punctuation">}</span></span><span class="token string"> \\n\\t id_x: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">\\t id_y: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Original: 
	 x:[&#39;毒药&#39;, &#39;解药&#39;, &#39;感冒药&#39;] 
	 y:[&#39;毒药&#39;, &#39;解药&#39;, &#39;感冒药&#39;] 
	 id_x: 4346479616	 id_y: 4346479616
After: 
	 x:[&#39;消炎药&#39;, &#39;解药&#39;, &#39;感冒药&#39;] 
	 y:[&#39;消炎药&#39;, &#39;解药&#39;, &#39;感冒药&#39;] 
	 id_x: 4346479616	 id_y: 4346479616
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="观察数据的存储方式" tabindex="-1"><a class="header-anchor" href="#观察数据的存储方式"><span>观察数据的存储方式</span></a></h5>`,97),h={href:"https://pythontutor.com/render.html#mode=display",target:"_blank",rel:"noopener noreferrer"},y=n("img",{src:u,alt:"",tabindex:"0",loading:"lazy"},null,-1),x=n("figcaption",null,null,-1),_={href:"https://pythontutor.com/render.html#mode=display",target:"_blank",rel:"noopener noreferrer"},f=n("img",{src:d,alt:"",tabindex:"0",loading:"lazy"},null,-1),w=n("figcaption",null,null,-1),q=n("p",null,[s("网站 "),n("strong",null,[n("u",null,"Pythontutor")]),s(" 输入该代码查看"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",{mathvariant:"normal"},"/"),n("mi",null,"u"),n("mi",null,"p"),n("mi",null,"a"),n("mi",null,"r"),n("mi",null,"r"),n("mi",null,"o"),n("mi",null,"w")]),n("annotation",{encoding:"application/x-tex"},"/uparrow")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"/"),n("span",{class:"mord mathnormal"},"u"),n("span",{class:"mord mathnormal"},"p"),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal"},"rro"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02691em"}},"w")])])]),s("​")],-1),T=p(`<div class="hint-container tip"><p class="hint-container-title">\`y = x\`在 **<u>列表</u>** 当中直接让\`y\`和\`x\`指向了同一地址</p></div><h4 id="b-copy" tabindex="-1"><a class="header-anchor" href="#b-copy"><span>b. <code>.copy()</code></span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;消炎药&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;解药&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;感冒药&#39;</span><span class="token punctuation">]</span>
y <span class="token operator">=</span> x<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Original: \\n\\t x:</span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token punctuation">}</span></span><span class="token string"> \\n\\t y:</span><span class="token interpolation"><span class="token punctuation">{</span>y<span class="token punctuation">}</span></span><span class="token string"> \\n\\t id_x: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">\\t id_y: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
y<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;毒药&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;After: \\n\\t x:</span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token punctuation">}</span></span><span class="token string"> \\n\\t y:</span><span class="token interpolation"><span class="token punctuation">{</span>y<span class="token punctuation">}</span></span><span class="token string"> \\n\\t id_x: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">\\t id_y: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Original: 
	 x:[&#39;消炎药&#39;, &#39;解药&#39;, &#39;感冒药&#39;] 
	 y:[&#39;消炎药&#39;, &#39;解药&#39;, &#39;感冒药&#39;] 
	 id_x: 4314039424	 id_y: 4314041280
After: 
	 x:[&#39;消炎药&#39;, &#39;解药&#39;, &#39;感冒药&#39;] 
	 y:[&#39;毒药&#39;, &#39;解药&#39;, &#39;感冒药&#39;] 
	 id_x: 4314039424	 id_y: 4314041280
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="观察数据的存储方式-1" tabindex="-1"><a class="header-anchor" href="#观察数据的存储方式-1"><span>观察数据的存储方式</span></a></h5><figure><img src="`+r+`" alt="image-20240526164104901" tabindex="0" loading="lazy"><figcaption>image-20240526164104901</figcaption></figure><h5 id="存在的问题" tabindex="-1"><a class="header-anchor" href="#存在的问题"><span>存在的问题</span></a></h5><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;毒药&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;解药&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;感冒药&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&#39;香蕉&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;橘子&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;梨&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
y <span class="token operator">=</span> x<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Original 2:\\n\\tx: </span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token punctuation">}</span></span><span class="token string">\\n\\ty: </span><span class="token interpolation"><span class="token punctuation">{</span>y<span class="token punctuation">}</span></span><span class="token string">\\n\\tid:\\n\\t\\tid_x: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">\\n\\t\\tid_y: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">\\n\\t\\tid_children x[3]: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">\\n\\t\\tid_children y[3]: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>y<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
y<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;苹果&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;After 2:\\n\\tx: </span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token punctuation">}</span></span><span class="token string">\\n\\ty: </span><span class="token interpolation"><span class="token punctuation">{</span>y<span class="token punctuation">}</span></span><span class="token string">\\n\\tid:\\n\\t\\tid_x: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">\\n\\t\\tid_y: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">\\n\\t\\tid_children x[3]: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">\\n\\t\\tid_children y[3]: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>y<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Original 2:
	x: [&#39;毒药&#39;, &#39;解药&#39;, &#39;感冒药&#39;, [&#39;香蕉&#39;, &#39;橘子&#39;, &#39;梨&#39;]]
	y: [&#39;毒药&#39;, &#39;解药&#39;, &#39;感冒药&#39;, [&#39;香蕉&#39;, &#39;橘子&#39;, &#39;梨&#39;]]
	id:
		id_x: 4336204800
		id_y: 4336339840
		id_children x[3]: 4336337984
		id_children y[3]: 4336337984
After 2:
	x: [&#39;毒药&#39;, &#39;解药&#39;, &#39;感冒药&#39;, [&#39;苹果&#39;, &#39;橘子&#39;, &#39;梨&#39;]]
	y: [&#39;毒药&#39;, &#39;解药&#39;, &#39;感冒药&#39;, [&#39;苹果&#39;, &#39;橘子&#39;, &#39;梨&#39;]]
	id:
		id_x: 4336204800
		id_y: 4336339840
		id_children x[3]: 4336337984
		id_children y[3]: 4336337984
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="使用copy复制出的新列表-子列表依然使用原地址" tabindex="-1"><a class="header-anchor" href="#使用copy复制出的新列表-子列表依然使用原地址"><span>使用<code>copy</code>复制出的新列表，子列表依然使用原地址</span></a></h6><figure><img src="`+k+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h6 id="解决方案1" tabindex="-1"><a class="header-anchor" href="#解决方案1"><span>解决方案1</span></a></h6><p>更改 <code>y[3]</code></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#解决方案1</span>
y<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;苹果&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;橘子&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;梨&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;After 2:\\n\\tx: </span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token punctuation">}</span></span><span class="token string">\\n\\ty: </span><span class="token interpolation"><span class="token punctuation">{</span>y<span class="token punctuation">}</span></span><span class="token string">\\n\\tid:\\n\\t\\tid_x: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">\\n\\t\\tid_y: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">\\n\\t\\tid_children x[3]: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">\\n\\t\\tid_children y[3]: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">(</span>y<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>After 2:
	x: [&#39;毒药&#39;, &#39;解药&#39;, &#39;感冒药&#39;, [&#39;香蕉&#39;, &#39;橘子&#39;, &#39;梨&#39;]]
	y: [&#39;毒药&#39;, &#39;解药&#39;, &#39;感冒药&#39;, [&#39;苹果&#39;, &#39;橘子&#39;, &#39;梨&#39;]]
	id:
		id_x: 4369517888
		id_y: 4369515392
		id_children x[3]: 4369514560
		id_children y[3]: 4369515136
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+m+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h6 id="解决方案2⬇️" tabindex="-1"><a class="header-anchor" href="#解决方案2⬇️"><span>解决方案2⬇️</span></a></h6><h4 id="c-deepcopy" tabindex="-1"><a class="header-anchor" href="#c-deepcopy"><span>c. <code>deepcopy</code></span></a></h4><p>使用深拷贝需要导入库</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> copy <span class="token keyword">import</span> deepcopy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>具体实现：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>from copy import deepcopy

x = [&#39;毒药&#39;,&#39;解药&#39;,&#39;感冒药&#39;,[&#39;香蕉&#39;,&#39;橘子&#39;,&#39;梨&#39;]]
y = deepcopy(x)
print(f&#39;Original 2:\\n\\tx: {x}\\n\\ty: {y}\\n\\tid:\\n\\t\\tid_x: {id(x)}\\n\\t\\tid_y: {id(y)}\\n\\t\\tid_children x[3]: {id(x[3])}\\n\\t\\tid_children y[3]: {id(y[3])}&#39;)
y[3][0] = &#39;苹果&#39;
print(f&#39;After 2:\\n\\tx: {x}\\n\\ty: {y}\\n\\tid:\\n\\t\\tid_x: {id(x)}\\n\\t\\tid_y: {id(y)}\\n\\t\\tid_children x[3]: {id(x[3])}\\n\\t\\tid_children y[3]: {id(y[3])}&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="常见的内置函数表格" tabindex="-1"><a class="header-anchor" href="#常见的内置函数表格"><span>常见的内置函数表格</span></a></h2><p>下面是 Python 列表常见的内置函数表格：</p><table><thead><tr><th>序号</th><th>函数名</th><th>函数用法说明</th><th>代码演示</th></tr></thead><tbody><tr><td>1</td><td><code>append()</code></td><td>向列表末尾添加一个元素</td><td><code>lst.append(4)</code></td></tr><tr><td>2</td><td><code>extend()</code></td><td>将一个列表中的所有元素添加到另一个列表中</td><td><code>lst.extend([4, 5])</code></td></tr><tr><td>3</td><td><code>insert()</code></td><td>在指定位置插入一个元素</td><td><code>lst.insert(1, &#39;a&#39;)</code></td></tr><tr><td>4</td><td><code>remove()</code></td><td>删除列表中的第一个匹配项（指定的值）</td><td><code>lst.remove(&#39;a&#39;)</code></td></tr><tr><td>5</td><td><code>pop()</code></td><td>删除并返回列表中的一个元素（默认最后一个元素）</td><td><code>lst.pop()</code></td></tr><tr><td>6</td><td><code>clear()</code></td><td>清空列表</td><td><code>lst.clear()</code></td></tr><tr><td>7</td><td><code>index()</code></td><td>返回列表中指定元素的第一个匹配项的索引</td><td><code>lst.index(&#39;a&#39;)</code></td></tr><tr><td>8</td><td><code>count()</code></td><td>计算列表中某个元素出现的次数</td><td><code>lst.count(1)</code></td></tr><tr><td>9</td><td><code>sort()</code></td><td>对列表中的元素进行排序（默认升序）</td><td><code>lst.sort()</code></td></tr><tr><td>10</td><td><code>reverse()</code></td><td>反转列表中的元素顺序</td><td><code>lst.reverse()</code></td></tr><tr><td>11</td><td><code>copy()</code></td><td>返回列表的浅复制</td><td><code>new_lst = lst.copy()</code></td></tr><tr><td>12</td><td><code>len()</code></td><td>返回列表中的元素数量</td><td><code>len(lst)</code></td></tr><tr><td>13</td><td><code>sum()</code></td><td>计算列表中所有数字元素的总和（元素需要是数字类型）</td><td><code>sum([1, 2, 3])</code></td></tr><tr><td>14</td><td><code>min()</code></td><td>返回列表中的最小值（元素需要可比较）</td><td><code>min([1, 2, 3])</code></td></tr><tr><td>15</td><td><code>max()</code></td><td>返回列表中的最大值（元素需要可比较）</td><td><code>max([1, 2, 3])</code></td></tr><tr><td>16</td><td><code>sorted()</code></td><td>返回列表排序后的新列表</td><td><code>sorted([3, 1, 2])</code></td></tr><tr><td>17</td><td><code>all()</code></td><td>检查列表中所有元素是否都为真（非零或非空）</td><td><code>all([1, 2, 3])</code></td></tr><tr><td>18</td><td><code>any()</code></td><td>检查列表中是否存在至少一个真值（非零或非空）</td><td><code>any([0, 0, 1])</code></td></tr><tr><td>19</td><td><code>enumerate()</code></td><td>枚举列表，返回索引和元素的元组</td><td><code>list(enumerate([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]))</code></td></tr><tr><td>20</td><td><code>zip()</code></td><td>将多个列表中相同位置的元素配对，形成新的元组列表</td><td><code>list(zip([1, 2], [&#39;a&#39;, &#39;b&#39;]))</code></td></tr><tr><td>21</td><td><code>map()</code></td><td>对列表中的每个元素应用一个给定的函数，返回结果的迭代器</td><td><code>list(map(str, [1, 2, 3]))</code></td></tr><tr><td>22</td><td><code>filter()</code></td><td>过滤列表中的元素，只返回使给定函数为真的元素</td><td><code>list(filter(lambda x: x &gt; 1, [1, 2, 3]))</code></td></tr></tbody></table><p>这些函数涵盖了列表处理的大部分需求，从基本的添加和删除操作到更复杂的排序和转换处理。</p><h2 id="练习-1" tabindex="-1"><a class="header-anchor" href="#练习-1"><span>练习</span></a></h2><h4 id="-1" tabindex="-1"><a class="header-anchor" href="#-1"><span></span></a></h4><h4 id="-2" tabindex="-1"><a class="header-anchor" href="#-2"><span></span></a></h4><h4 id="给定两个列表-合并这两个列表并按升序排序。给定一个列表-找出最大值和最小值" tabindex="-1"><a class="header-anchor" href="#给定两个列表-合并这两个列表并按升序排序。给定一个列表-找出最大值和最小值"><span>给定两个列表，合并这两个列表并按升序排序。给定一个列表，找出最大值和最小值</span></a></h4><p><code>max(list)</code>、<code>min(list)</code> 得到列表的最大值和最小值</p><h3 id="_17-max、min" tabindex="-1"><a class="header-anchor" href="#_17-max、min"><span>17. <code>max</code>、<code>min</code></span></a></h3><h3 id="-3" tabindex="-1"><a class="header-anchor" href="#-3"><span></span></a></h3>',34);function z(L,A){const a=o("ExternalLinkIcon");return c(),i("div",null,[g,n("figure",null,[n("a",h,[y,t(a)]),x]),n("figure",null,[n("a",_,[f,t(a)]),w]),q,T])}const N=e(b,[["render",z],["__file","note4.html.vue"]]),P=JSON.parse(`{"path":"/zh/Lilya/program/Python/note4.html","title":"04-列表","lang":"zh-CN","frontmatter":{"title":"04-列表","author":"黑静美","category":["编程"],"tag":["python"],"icon":"/ico/Python.ico","sticky":"fals","star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":3,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"description":"1. 列表的特征 利用中括号表示列表 列表内的元素用逗号隔开 （半角） 列表的可变性：可以修改列表里的内容 字符串强制转化为列表 （每个字母/数字/独立的汉字/空白占位符均被隔开） 2. 下标相关 获取列表的某一个元素 编程语言中通常第一个位置的编号是0 例：提取99和80 连续读取 倒置列表 3. 1. 更改列表的元素 2. 列表内插入内容 练习 获...","head":[["meta",{"property":"og:url","content":"https://github.com/Heijingmei/Heijingmei.github.io/zh/Lilya/program/Python/note4.html"}],["meta",{"property":"og:site_name","content":"BH工作室"}],["meta",{"property":"og:title","content":"04-列表"}],["meta",{"property":"og:description","content":"1. 列表的特征 利用中括号表示列表 列表内的元素用逗号隔开 （半角） 列表的可变性：可以修改列表里的内容 字符串强制转化为列表 （每个字母/数字/独立的汉字/空白占位符均被隔开） 2. 下标相关 获取列表的某一个元素 编程语言中通常第一个位置的编号是0 例：提取99和80 连续读取 倒置列表 3. 1. 更改列表的元素 2. 列表内插入内容 练习 获..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-18T20:53:57.000Z"}],["meta",{"property":"article:author","content":"黑静美"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:modified_time","content":"2024-06-18T20:53:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"04-列表\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-18T20:53:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"黑静美\\"}]}"]]},"headers":[{"level":2,"title":"1. 列表的特征","slug":"_1-列表的特征","link":"#_1-列表的特征","children":[]},{"level":2,"title":"2. 下标相关","slug":"_2-下标相关","link":"#_2-下标相关","children":[{"level":3,"title":"获取列表的某一个元素","slug":"获取列表的某一个元素","link":"#获取列表的某一个元素","children":[]},{"level":3,"title":"连续读取","slug":"连续读取","link":"#连续读取","children":[]},{"level":3,"title":"倒置列表","slug":"倒置列表","link":"#倒置列表","children":[]}]},{"level":2,"title":"3.","slug":"_3","link":"#_3","children":[{"level":3,"title":"1. 更改列表的元素","slug":"_1-更改列表的元素","link":"#_1-更改列表的元素","children":[]},{"level":3,"title":"2. 列表内插入内容","slug":"_2-列表内插入内容","link":"#_2-列表内插入内容","children":[]},{"level":3,"title":"3. 列表的加法1","slug":"_3-列表的加法1","link":"#_3-列表的加法1","children":[]},{"level":3,"title":"4. 在列表的特定位置插入元素「.insert(index,element)」","slug":"_4-在列表的特定位置插入元素「-insert-index-element-」","link":"#_4-在列表的特定位置插入元素「-insert-index-element-」","children":[]},{"level":3,"title":"5.修改列表中的元素2","slug":"_5-修改列表中的元素2","link":"#_5-修改列表中的元素2","children":[]},{"level":3,"title":"6. 末尾添加元素","slug":"_6-末尾添加元素","link":"#_6-末尾添加元素","children":[{"level":4,"title":"a. 使用.append()在末尾添加元素","slug":"a-使用-append-在末尾添加元素","link":"#a-使用-append-在末尾添加元素","children":[{"level":5,"title":"b. .extend()","slug":"b-extend","link":"#b-extend","children":[]}]}]},{"level":3,"title":"7. 删除元素","slug":"_7-删除元素","link":"#_7-删除元素","children":[{"level":4,"title":"c. del删除元素","slug":"c-del删除元素","link":"#c-del删除元素","children":[]},{"level":4,"title":"d. .pop()默认删除最后一个元素","slug":"d-pop-默认删除最后一个元素","link":"#d-pop-默认删除最后一个元素","children":[]},{"level":4,"title":"e. .remove()指定删除列表中的元素","slug":"e-remove-指定删除列表中的元素","link":"#e-remove-指定删除列表中的元素","children":[]}]},{"level":3,"title":"8. 使用+加号相加多个列表_加法2","slug":"_8-使用-加号相加多个列表-加法2","link":"#_8-使用-加号相加多个列表-加法2","children":[]},{"level":3,"title":"9. len长度","slug":"_9-len长度","link":"#_9-len长度","children":[]},{"level":3,"title":"","slug":"","link":"#","children":[]},{"level":3,"title":"10. in","slug":"_10-in","link":"#_10-in","children":[{"level":4,"title":"判断某个值是否在列表中","slug":"判断某个值是否在列表中","link":"#判断某个值是否在列表中","children":[{"level":6,"title":"使用if条件","slug":"使用if条件","link":"#使用if条件","children":[]}]},{"level":4,"title":"判断某个值是否在字典中","slug":"判断某个值是否在字典中","link":"#判断某个值是否在字典中","children":[]}]},{"level":3,"title":"11. 获取列表中某个元素重复的次数 .count()","slug":"_11-获取列表中某个元素重复的次数-count","link":"#_11-获取列表中某个元素重复的次数-count","children":[{"level":4,"title":"12. .index()","slug":"_12-index","link":"#_12-index","children":[]}]},{"level":3,"title":"13. 翻转列表.reverse()","slug":"_13-翻转列表-reverse","link":"#_13-翻转列表-reverse","children":[]},{"level":3,"title":"14. 列表排序.sort()","slug":"_14-列表排序-sort","link":"#_14-列表排序-sort","children":[]},{"level":3,"title":"15. 列表排序2.sorted()","slug":"_15-列表排序2-sorted","link":"#_15-列表排序2-sorted","children":[]}]},{"level":2,"title":"练习","slug":"练习","link":"#练习","children":[{"level":3,"title":"16. 深浅拷贝","slug":"_16-深浅拷贝","link":"#_16-深浅拷贝","children":[{"level":4,"title":"a. 直接赋值","slug":"a-直接赋值","link":"#a-直接赋值","children":[{"level":5,"title":"观察数据的存储方式","slug":"观察数据的存储方式","link":"#观察数据的存储方式","children":[]}]},{"level":4,"title":"b. .copy()","slug":"b-copy","link":"#b-copy","children":[{"level":5,"title":"观察数据的存储方式","slug":"观察数据的存储方式-1","link":"#观察数据的存储方式-1","children":[]},{"level":5,"title":"存在的问题","slug":"存在的问题","link":"#存在的问题","children":[{"level":6,"title":"使用copy复制出的新列表，子列表依然使用原地址","slug":"使用copy复制出的新列表-子列表依然使用原地址","link":"#使用copy复制出的新列表-子列表依然使用原地址","children":[]},{"level":6,"title":"解决方案1","slug":"解决方案1","link":"#解决方案1","children":[]},{"level":6,"title":"解决方案2⬇️","slug":"解决方案2⬇️","link":"#解决方案2⬇️","children":[]}]}]},{"level":4,"title":"c.  deepcopy","slug":"c-deepcopy","link":"#c-deepcopy","children":[]}]}]},{"level":2,"title":"常见的内置函数表格","slug":"常见的内置函数表格","link":"#常见的内置函数表格","children":[]},{"level":2,"title":"练习","slug":"练习-1","link":"#练习-1","children":[{"level":4,"title":"","slug":"-1","link":"#-1","children":[]},{"level":4,"title":"","slug":"-2","link":"#-2","children":[]},{"level":4,"title":"给定两个列表，合并这两个列表并按升序排序。给定一个列表，找出最大值和最小值","slug":"给定两个列表-合并这两个列表并按升序排序。给定一个列表-找出最大值和最小值","link":"#给定两个列表-合并这两个列表并按升序排序。给定一个列表-找出最大值和最小值","children":[]},{"level":3,"title":"17. max、min","slug":"_17-max、min","link":"#_17-max、min","children":[]},{"level":3,"title":"","slug":"-3","link":"#-3","children":[]}]}],"git":{"createdTime":1718744037000,"updatedTime":1718744037000,"contributors":[{"name":"Heijingmei","email":"bh.heijingmei@gmail.com","commits":1}]},"readingTime":{"minutes":10.75,"words":3225},"filePathRelative":"zh/Lilya/program/Python/note4.md","localizedDate":"2024年6月18日","excerpt":"<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code>student <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'Lilei'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">18</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'class01'</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">201901</span><span class=\\"token punctuation\\">]</span>\\nstudent <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'W'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">18</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'class02'</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">201902</span><span class=\\"token punctuation\\">]</span>\\n</code></pre></div>","autoDesc":true}`);export{N as comp,P as data};
