import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,e}from"./app-DEuV0OY5.js";const t={},i=e(`<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>title: 01-标量
author: 黑静美
category: 
    - 编程
tag:
    - rust
icon: /ico/Rust.ico
sticky: false
star: false
article: true
timeline: true
image: false
navbar: true
sidebarIcon: true
headerDepth: 3
comment: true
lastUpdated: true
editLink: false
backToTop: true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-rust line-numbers-mode" data-ext="rs" data-title="rs"><pre class="language-rust"><code>    <span class="token comment">// let a;</span>
    <span class="token comment">// |     let a: /* Type */;</span>
    <span class="token comment">// |          ++++++++++++</span>
    <span class="token keyword">let</span> a <span class="token operator">=</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> b<span class="token punctuation">:</span> <span class="token keyword">i32</span> <span class="token operator">=</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">;</span>

    <span class="token comment">// let b: u32 = -15;</span>
    <span class="token comment">// |            ^^^ cannot apply unary operator \`-\`</span>
    <span class="token comment">// = note: unsigned values cannot be negated</span>
    
    <span class="token keyword">let</span> c<span class="token punctuation">:</span> <span class="token keyword">i8</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} {} {}&quot;</span><span class="token punctuation">,</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Die Def-bereich des i8 ist von {} bis {}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">i8</span><span class="token punctuation">::</span><span class="token function">min_value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">i8</span><span class="token punctuation">::</span><span class="token function">max_value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> x<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">;</span>
    <span class="token comment">// println!(&quot;x has the Value {}&quot;, x);      !\`x\` isn&#39;t initialized </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:: 想要查看某数据类型（子分类）的值的范围，可以使用该分类名称如<code>i8</code> +<code>::</code> ， <code>min_value()</code>以及<code>max_value()</code></p><hr><p>报错：rust中不可以在声明变量时既不指定类型也不赋值</p><div class="language-rust line-numbers-mode" data-ext="rs" data-title="rs"><pre class="language-rust"><code><span class="token keyword">let</span> a<span class="token punctuation">:</span> <span class="token comment">/* Type */</span><span class="token punctuation">;</span>
      <span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>可以指定类型但是不赋值，此时不能打印</p><p>报错：打印报错，没有初始化（赋值）</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>let x: i32;  //
println!(&quot;x has the Value {}&quot;, x);      !\`x\` isn&#39;t initialized 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>报错：不可以超出制定的数据类型的的范围，可以不进行指定，让系统根据声明的数据分配</p><div class="language-rust line-numbers-mode" data-ext="rs" data-title="rs"><pre class="language-rust"><code><span class="token keyword">let</span> b<span class="token punctuation">:</span> <span class="token keyword">u32</span> <span class="token operator">=</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">;</span>
            <span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span> cannot apply unary operator \`<span class="token operator">-</span>\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,11),o=[i];function p(l,c){return a(),s("div",null,o)}const u=n(t,[["render",p],["__file","note2-1.html.vue"]]),m=JSON.parse('{"path":"/zh/Lilya/program/Rust/note2-1.html","title":"","lang":"zh-CN","frontmatter":{"description":":: 想要查看某数据类型（子分类）的值的范围，可以使用该分类名称如i8 +:: ， min_value()以及max_value() 报错：rust中不可以在声明变量时既不指定类型也不赋值 可以指定类型但是不赋值，此时不能打印 报错：打印报错，没有初始化（赋值） 报错：不可以超出制定的数据类型的的范围，可以不进行指定，让系统根据声明的数据分配","head":[["meta",{"property":"og:url","content":"https://github.com/Heijingmei/Heijingmei.github.io/zh/Lilya/program/Rust/note2-1.html"}],["meta",{"property":"og:site_name","content":"BH工作室"}],["meta",{"property":"og:description","content":":: 想要查看某数据类型（子分类）的值的范围，可以使用该分类名称如i8 +:: ， min_value()以及max_value() 报错：rust中不可以在声明变量时既不指定类型也不赋值 可以指定类型但是不赋值，此时不能打印 报错：打印报错，没有初始化（赋值） 报错：不可以超出制定的数据类型的的范围，可以不进行指定，让系统根据声明的数据分配"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-19T09:26:02.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-19T09:26:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-19T09:26:02.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1718789162000,"updatedTime":1718789162000,"contributors":[{"name":"Heijingmei","email":"bh.heijingmei@gmail.com","commits":1}]},"readingTime":{"minutes":0.87,"words":260},"filePathRelative":"zh/Lilya/program/Rust/note2-1.md","localizedDate":"2024年6月19日","excerpt":"<div class=\\"language-text\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"language-text\\"><code>title: 01-标量\\nauthor: 黑静美\\ncategory: \\n    - 编程\\ntag:\\n    - rust\\nicon: /ico/Rust.ico\\nsticky: false\\nstar: false\\narticle: true\\ntimeline: true\\nimage: false\\nnavbar: true\\nsidebarIcon: true\\nheaderDepth: 3\\ncomment: true\\nlastUpdated: true\\neditLink: false\\nbackToTop: true\\n</code></pre></div>","autoDesc":true}');export{u as comp,m as data};
